//1、随即产生字母
		   //1.1A.现在一个字符数组中保存26个大写的英文字母
		   //1.1B.通过随即下标抽取，并将抽取到随即字母保存一个
		  //新的数组中。
		  /**1.2A.定义一个字符数组，用来保存随即产生的字母
		   * 1.2B.循环为该数组中的每一个字母赋值，原理：
		   * (char)(random.nextInt(26)+65);[A,Z]
		   */
	 /**2、在窗体上绘制出所有字母，检查产生字符数组是否
	  * 会出现异常。
	  *    2.1如果有异常检查代码
	  *    2.2无异常：将所有字母对应的y的坐标改为当前值的负数
	  * 3.使用多线程让所有的字母下落
	  *     不同字母的颜色不同、速度不同，大小不同
	  *     当字母移出窗体的底部时，将该字母“移到”窗体上部，
	  * 将该字母所有的属性重新初始化。
	  * 4、获取键盘输入的字符。
	  * 5、定义两个变量：
	  * 	int maxY = -1;
	  *     int maxIndex = -1;
	  * 6、将玩家输入的字符和窗体上“有效区域”内字符逐一去
	  * 比较，直到找到相同的字母，使用该字母对应的y和maxY
	  * 去比较。
	  * 如果y>maxY 那么maxY = y，
	  * maxIndex = 该字母对应的下标 
	  * 如果y<=maxY,那么继续寻找下一个相同的
	  *7、比较结束后：
	  *如果一个相同的都没有找到的话，认定该次输入为错误操作；
	  *如果找到了，将maxIndex下标对应字母“消去”，认定该输入
	  *为正确操作。
	  *8、处理游戏结束。
	  */